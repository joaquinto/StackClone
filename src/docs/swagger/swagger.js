import { created, success } from './definitions/successResponse';
import {
  badRequest, notAuthorized, accessForbidden, notFound, conflict,
  serverError,
} from './definitions/errorResponse';
import { signIn, signUp } from './definitions/auth';
import { signInPath, signUpPath } from './paths/auth';
import { getUserPath, userSubscribePath, searchUsersPath } from './paths/user';
import { createQuestion, questionId } from './definitions/question';
import {
  postQuestionPath, getQuestionsPath, getQuestionPath,
  searchquestionsPath, questionUpVotePath, questionDownVotePath,
} from './paths/question';
import createAnswer from './definitions/answer';
import postAnswerPath from './paths/answer';

const swaggerDocument = {
  swagger: '2.0',
  info: {
    version: '1.0.0',
    title: 'Barefoot Nomad API',
    description: 'API Documentation for STACKOVERFLOW.',
    header: 'none',
  },
  host: 'stack-clone.herokuapp.com',
  basePath: '/api/v1/',
  produces: ['application/json'],
  consumes: ['application/json'],
  schemes: ['https', 'http'],
  securityDefinitions: {
    BearerToken: {
      description: `
        All protected routes must be accessed with a Bearer Token.
        The JWT Token is generated by the API upon user login.`,
      type: 'apiKey',
      name: 'Authorization',
      in: 'header',
    },
  },
  tags: [
    {
      name: 'auth',
      description: 'Everything about authentication',
    },
    {
      name: 'users',
      description: 'Everything about the user',
    },
    {
      name: 'questions',
      description: 'Everything about question',
    },
    {
      name: 'answers',
      description: 'Everything about answer',
    },
  ],
  paths: {
    '/auth/signin': signInPath,
    '/auth/signup': signUpPath,
    '/users': getUserPath,
    '/users/subscribe': userSubscribePath,
    '/users/search/?displayName={displayName}': searchUsersPath,
    '/questions': postQuestionPath,
    '/questions/': getQuestionsPath,
    '/questions/{questionId}': getQuestionPath,
    '/questions/search/?question={question}': searchquestionsPath,
    '/questions/{questionId}/upvote': questionUpVotePath,
    '/questions/{questionId}/downvote': questionDownVotePath,
    '/questions/{questionId}/answers': postAnswerPath,
  },
  definitions: {
    signIn,
    signUp,
    createQuestion,
    questionId,
    createAnswer,
    success, // 200
    created, // 201
    badRequest, // 400
    notAuthorized, // 401
    accessForbidden, // 403
    notFound, // 404
    conflict, // 409
    serverError, // 500
  },
};

export default swaggerDocument;
